
OCAML = ocaml-3.12.0+dev
OCAMLFILE = $(OCAML).touch
BITSTRING = ocaml-bitstring-2.0.0
BITSTRINGFILE = $(BITSTRING).touch
CAIRO = cairo-1.8.10
PIXMAN = pixman-0.18.0
PWD = $(shell pwd)
OCAMLCMDS = "ocamlc=$(PWD)/ocaml/bin/ocamlc.opt ocamlopt=$(PWD)/ocaml/bin/ocamlopt.opt camlp4o=$(PWD)/ocaml/bin/camlp4o"
SAFETOOLSPREFIX = $(shell echo $(TOOLSPREFIX) | sed -e 's/\//\\\//g')

all: ocaml bitstring pixman cairo

ocaml: $(OCAMLFILE)
	# can't build a 32-bit compiler yet, so this patch breaks their build system
	#cd trunk && patch -Np0 -i ../ocaml.dev.patch
	mv trunk $(OCAML)
	# tarball from viewcvs doesn't include execute bits
	cd $(OCAML) && chmod -R 777 *
	# copy over modified boot-c-parts.sh
	cp -f boot-c-parts.sh $(OCAML)/build/
	cp -f install.sh $(OCAML)/build/
	# build host compiler tools
	cd $(OCAML) && ./configure -prefix $(PWD)/ocaml -no-curses -no-pthread -no-tk
	cd $(OCAML) && MAKE=$(MAKE) ./build/fastworld.sh
	cd $(OCAML) && MAKE=$(MAKE) ./build/install.sh
	# now overwrite with the snowflake 32-bit configuration
	cd $(OCAML) && cp -rf ../config.snowflake/* config/
	cd $(OCAML) && patch -Np0 -i ../ocaml.dev.patch
	# update some more config files...
	if [ ! -z "$(TOOLSPREFIX)" ]; then sed -i -e 's/^TOOLSPREFIX=/TOOLSPREFIX=$(SAFETOOLSPREFIX)\/i386-elf-/' $(OCAML)/config/Makefile; fi
	# fix macosx: doesn't handle --32
	if [ ! -z "$(TOOLSPREFIX)" ]; then \
		if [ ! -z "`grep -e 'macosx' $(OCAML)/config/config.sh`" ]; then \
			sed -i -e 's/i386-elf-as --32/i386-elf-as -arch i386/' $(OCAML)/config/Makefile; \
		fi; \
	fi
	cd $(OCAML) && ./build/mkconfig.sh && ./build/mkmyocamlbuild_config.sh
	# finally build our own ocamlopt.opt
	cd $(OCAML) && mkdir snowflake
	cd $(OCAML) && cp _build/ocamlopt snowflake/
	cd $(OCAML) && cp -r boot/ snowflake/boot/
	cd $(OCAML) && rm snowflake/boot/ocamlrun
	cd $(OCAML) && cp -f byterun/ocamlrun snowflake/boot/ocamlrun
	cd $(OCAML) && cp _build/boot/ocamlyacc snowflake/boot/ocamlyacc
	cd $(OCAML) && $(PWD)/ocaml/bin/ocamlbuild -build-dir snowflake stdlib/std_exit.cmx ocamlopt.opt
	# and copy it to the tools directory
	cp $(OCAML)/snowflake/ocamlopt.opt ./ocamlopt.opt

$(OCAMLFILE):
	tar zxf $(OCAML).tar.gz
	touch $(OCAMLFILE)

bitstring: $(BITSTRINGFILE) ocaml
	cd $(BITSTRING) && cp -f ../Makefile.in.bitstring Makefile.in && cp -f ../configure.bitstring configure && PATH=../ocaml/bin:$$PATH$$ ./configure
	$(MAKE) -C $(BITSTRING) all install
	touch bitstring

$(BITSTRINGFILE):
	tar xzf $(BITSTRING).tar.gz
	touch $(BITSTRINGFILE)

cairo: custom/lib/libcairo.a

custom/lib/libcairo.a: $(CAIRO) custom/lib/libpixman-1.a
	cd $(CAIRO) && PKG_CONFIG_PATH=$(PWD)/custom/lib/pkgconfig CC="gcc -m32" CFLAGS="-fno-builtin" \
		./configure --prefix=$(PWD)/custom \
		--disable-xlib \
		--disable-xcb \
		--disable-png \
		--disable-directfb \
		--disable-ft \
		--disable-pthread \
		--disable-ps \
		--disable-pdf \
		--disable-svg \
		--enable-shared=no || true
	echo "#define CAIRO_NO_MUTEX 1" >> $(CAIRO)/config.h
	$(MAKE) -C $(CAIRO) all install

$(CAIRO):
	tar zxf $(CAIRO).tar.gz

pixman: custom/lib/libpixman-1.a

custom/lib/libpixman-1.a: $(PIXMAN)
	cd $(PIXMAN) && CC="gcc -m32" CFLAGS="-fno-builtin" ./configure --disable-shared --disable-mmx --disable-sse2 --prefix=$(PWD)/custom
	$(MAKE) -C $(PIXMAN) all install

$(PIXMAN):
	tar zxf $(PIXMAN).tar.gz

clean:
	rm -rf ocaml $(OCAML) $(OCAMLFILE) trunk
	rm -rf $(BITSTRING) $(BITSTRINGFILE) bitstring
	rm -rf $(CAIRO) $(PIXMAN) custom

cleanbitstring:
	rm -rf $(BITSTRING) $(BITSTRINGFILE) bitstring
